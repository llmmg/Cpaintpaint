
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'ED13F83B1E31F3DBA3AC00E24DEAC555'
    
_lr_action_items = {'}':([1,8,10,14,15,16,23,32,35,37,38,39,40,41,42,43,44,46,48,50,56,58,61,],[-3,-4,-1,-5,-17,-16,-19,-20,-2,-18,-13,-10,-11,-15,-12,-14,48,50,-8,-7,58,-6,-9,]),'PRINTPIXEL':([0,21,31,34,54,],[2,2,2,2,2,]),'ADD_OP':([4,5,9,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,32,33,36,37,38,39,40,41,42,43,47,51,53,55,57,59,60,],[12,12,12,12,12,12,26,-17,-16,26,12,12,26,26,-19,26,12,12,12,12,12,12,26,26,12,-18,-13,-10,-11,-15,-12,-14,26,12,26,12,26,12,26,]),')':([15,16,23,24,32,37,38,39,40,41,42,43,49,60,],[-17,-16,-19,37,-20,-18,-13,-10,-11,-15,-12,-14,52,61,]),'<':([14,15,16,17,20,22,23,24,32,33,37,38,39,40,41,42,43,47,53,57,60,],[30,-17,-16,30,30,30,30,30,30,30,-18,30,30,30,-15,30,30,30,30,30,30,]),'NOTEQUAL':([14,15,16,17,20,22,23,24,32,33,37,38,39,40,41,42,43,47,53,57,60,],[25,-17,-16,25,25,25,25,25,25,25,-18,25,25,25,-15,25,-14,25,25,25,25,]),'PRINT':([0,21,31,34,54,],[4,4,4,4,4,]),',':([15,16,22,23,33,37,38,39,40,41,42,43,47,53,57,],[-17,-16,36,-19,45,-18,-13,-10,-11,-15,-12,-14,51,55,59,]),'=':([6,],[18,]),'{':([15,16,17,20,23,37,38,39,40,41,42,43,52,],[-17,-16,31,34,-19,-18,-13,-10,-11,-15,-12,-14,54,]),'IDENTIFIER':([0,4,5,9,11,12,13,18,19,21,25,26,27,28,29,30,31,34,36,45,51,54,55,59,],[6,15,15,15,15,15,15,15,15,6,15,15,15,15,15,15,6,6,15,6,15,6,15,15,]),'$end':([1,3,8,10,14,15,16,23,32,35,37,38,39,40,41,42,43,48,50,58,61,],[-3,0,-4,-1,-5,-17,-16,-19,-20,-2,-18,-13,-10,-11,-15,-12,-14,-8,-7,-6,-9,]),'FOR':([0,21,31,34,54,],[7,7,7,7,7,]),'MUL_OP':([14,15,16,17,20,22,23,24,32,33,37,38,39,40,41,42,43,47,53,57,60,],[27,-17,-16,27,27,27,-19,27,27,27,-18,-13,27,-11,-15,-12,-14,27,27,27,27,]),'>':([14,15,16,17,20,22,23,24,32,33,37,38,39,40,41,42,43,47,53,57,60,],[28,-17,-16,28,28,28,28,28,28,28,-18,28,28,28,28,28,28,28,28,28,28,]),'NUMBER':([4,5,9,11,12,13,18,19,25,26,27,28,29,30,36,51,55,59,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'(':([2,4,5,7,9,11,12,13,18,19,25,26,27,28,29,30,36,51,55,59,],[11,13,13,19,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'WHILE':([0,21,31,34,54,],[9,9,9,9,9,]),'EQUAL':([14,15,16,17,20,22,23,24,32,33,37,38,39,40,41,42,43,47,53,57,60,],[29,-17,-16,29,29,29,29,29,29,29,-18,-13,29,29,-15,29,-14,29,29,29,29,]),'IF':([0,21,31,34,54,],[5,5,5,5,5,]),';':([1,8,10,14,15,16,23,32,37,38,39,40,41,42,43,48,50,58,61,],[-3,-4,21,-5,-17,-16,-19,-20,-18,-13,-10,-11,-15,-12,-14,-8,-7,-6,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignation':([0,21,31,34,45,54,],[1,1,1,1,49,1,]),'structure':([0,21,31,34,54,],[8,8,8,8,8,]),'expression':([4,5,9,11,12,13,18,19,25,26,27,28,29,30,36,51,55,59,],[14,17,20,22,23,24,32,33,38,39,40,41,42,43,47,53,57,60,]),'statement':([0,21,31,34,54,],[10,10,10,10,10,]),'programme':([0,21,31,34,54,],[3,35,44,46,56,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parserPaint.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parserPaint.py',14),
  ('statement -> assignation','statement',1,'p_statement','parserPaint.py',19),
  ('statement -> structure','statement',1,'p_statement','parserPaint.py',20),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parserPaint.py',25),
  ('structure -> FOR ( expression , assignation ) { programme }','structure',9,'p_structure_for','parserPaint.py',30),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parserPaint.py',37),
  ('structure -> IF expression { programme }','structure',5,'p_structure_if','parserPaint.py',42),
  ('statement -> PRINTPIXEL ( expression , expression , expression , expression , expression )','statement',12,'p_printPixel','parserPaint.py',47),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parserPaint.py',52),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parserPaint.py',53),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_equal','parserPaint.py',58),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_notequal','parserPaint.py',63),
  ('expression -> expression < expression','expression',3,'p_expression_less','parserPaint.py',68),
  ('expression -> expression > expression','expression',3,'p_expression_more','parserPaint.py',73),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parserPaint.py',78),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parserPaint.py',79),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parserPaint.py',84),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parserPaint.py',89),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parserPaint.py',94),
]
